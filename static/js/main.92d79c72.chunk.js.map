{"version":3,"sources":["Constants/Comics.Constant.js","Actions/Comics.Action.js","Services/Marvel.Service.js","Services/Mail.Service.js","Constants/Mail.Constant.js","Actions/Mail.Action.js","FetchActions/Mail.Fetch.js","Components/ComicModel/ComicModel.js","Components/CardComics/CardComics.js","Components/Filter/Filter.js","Components/Pagination/Pagination.js","Images/marvel.svg","Pages/Comics/Comics.js","FetchActions/Comics.Fetch.js","Reduces/Comics.Reduce.js","Reduces/Mail.Reduce.js","Reduces/index.js","Containers/Store.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["setList","setCopyright","setRangeComics","addSelectedComics","removeSelectedComics","clearSelectedComics","setTotal","list","type","comicsConstants","text","first","last","comics","total","axios","create","baseURL","process","headers","common","params","apikey","mailClient","sendMail","status","message","mailConstants","getPriceType","ComicModel","comic","close","Paper","elevation","className","src","thumbnail","path","extension","alt","IconButton","color","aria-label","component","onClick","Container","maxWidth","Grid","container","spacing","direction","item","xs","Typography","variant","title","id","justify","alignItems","sm","md","creators","available","items","filter","creator","role","includes","length","map","name","join","description","dangerouslySetInnerHTML","__html","prices","price","pageCount","connect","state","selectedComics","dispatch","bindActionCreators","comicsActions","index","info","useState","check","setCheck","open","setOpen","useEffect","some","handleChangeModel","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","CardActions","FormControlLabel","control","Checkbox","checked","onChange","label","data-testid","Button","size","Modal","onClose","aria-labelledby","aria-describedby","methods","form","handleSelectAllComics","handleChangeForm","find","selectedComic","TextField","value","fullWidth","inputProps","FormControl","InputLabel","Select","format","MenuItem","order","Filter","page","limit","rangeComics","handleChangePage","handleChangeLimit","align","Pagination","count","Math","ceil","document","copyright","mail","loading","setLoading","loadingButton","setLoadingButton","snackbar","setSnackbar","dialogMail","setDialogMail","setPage","setLimit","setForm","useDispatch","getComics","useCallback","newPage","currentPage","options","offset","titleStartsWith","formatType","orderBy","MarvelClient","get","then","response","result","data","code","batchActions","results","attributionText","console","log","catch","getListComics","handleCloseDialogMail","logo","action","e","target","CircularProgress","Fab","event","href","Snackbar","autoHideDuration","Alert","severity","Dialog","DialogTitle","DialogContent","DialogContentText","autoFocus","margin","DialogActions","MailClient","post","success","err","sendComicsToMail","initalState","reduces","combineReducers","Set","store","createStore","enableBatching","applyMiddleware","thunk","theme","createMuiTheme","palette","primary","main","App","exact","Comics","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.92d79c72.chunk.js","sourcesContent":["export const setList = \"SET_COMICS\";\r\nexport const setCopyright = \"SET_COPYRIGHT\";\r\nexport const setRangeComics = \"SET_RANGE_COMICS\";\r\nexport const addSelectedComics = \"ADD_SELECTED_COMICS\";\r\nexport const removeSelectedComics = \"REMOVE_SELECTED_COMICS\";\r\nexport const clearSelectedComics = \"CLEAR_SELECTED_COMICS\";\r\nexport const setTotal = \"SET_TOTAL\";","import * as comicsConstants from \"../Constants/Comics.Constant\";\r\n\r\nexport function setList(list) {\r\n  return {\r\n    type: comicsConstants.setList,\r\n    list,\r\n  };\r\n}\r\n\r\nexport function setCopyright(text) {\r\n  return {\r\n    type: comicsConstants.setCopyright,\r\n    text,\r\n  };\r\n}\r\n\r\nexport function setRangeComics(first, last) {\r\n  return {\r\n    type: comicsConstants.setRangeComics,\r\n    first,\r\n    last,\r\n  };\r\n}\r\n\r\nexport function addSelectedComics(comics) {\r\n  return {\r\n    type: comicsConstants.addSelectedComics,\r\n    comics,\r\n  };\r\n}\r\n\r\nexport function removeSelectedComics(comics) {\r\n  return {\r\n    type: comicsConstants.removeSelectedComics,\r\n    comics,\r\n  };\r\n}\r\n\r\nexport function clearSelectedComics() {\r\n  return {\r\n    type: comicsConstants.clearSelectedComics,\r\n  };\r\n}\r\n\r\nexport function setTotal(total) {\r\n  return {\r\n    type: comicsConstants.setTotal,\r\n    total,\r\n  };\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: process.env.REACT_APP_MARVEL_BASE_URL,\r\n  headers: {\r\n    common: {\r\n      \"Content-Type\": \"application/json; charset=utf-8\",\r\n    },\r\n  },\r\n  params: {\r\n    apikey: process.env.REACT_APP_MARVEL_API_KEY,\r\n  },\r\n});","import axios from \"axios\";\r\n\r\nconst mailClient = axios.create({\r\n  baseURL: process.env.REACT_APP_MAIL_BASE_URL,\r\n  headers: {\r\n    common: {\r\n      \"Content-Type\": \"application/json; charset=utf-8\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default mailClient;\r\n","export const sendMail = \"SEND_MAIL\";","import * as mailConstants from \"../Constants/Mail.Constant\";\r\n\r\nexport function sendMail(status, message) {\r\n  return {\r\n    type: mailConstants.sendMail,\r\n    status,\r\n    message,\r\n  };\r\n}\r\n","import MailClient from \"../Services/Mail.Service\";\r\nimport { sendMail } from \"../Actions/Mail.Action\";\r\n\r\nexport const sendComicsToMail = (mail, comics) => {\r\n  return (dispatch) =>\r\n    MailClient.post(\"/sendMail\", { mail, comics })\r\n      .then((response) => {\r\n        if (response.data.success) dispatch(sendMail(true, \"Success\"));\r\n        else dispatch(sendMail(false, response.data.message));\r\n      })\r\n      .catch((err) => dispatch(sendMail(false, err.message)));\r\n};","import React from \"react\";\r\nimport { Paper, Grid, IconButton, Typography, Container } from \"@material-ui/core\";\r\nimport \"./ComicModel.scss\";\r\n\r\n// Icons\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst getPriceType = (type) => {\r\n  switch (type) {\r\n    case \"printPrice\":\r\n      return \"Print Price\";\r\n    default:\r\n      return \"Not found\";\r\n  }\r\n};\r\n\r\nconst ComicModel = ({ comic, close }) => {\r\n  return (\r\n    <Paper elevation={1} className=\"comic-model\">\r\n      <div className=\"bg-comic\">\r\n        <img src={`${comic.thumbnail.path}.${comic.thumbnail.extension}`} alt=\"bg-comic\" />\r\n      </div>\r\n      <div className=\"comic-info-block\">\r\n        <div className=\"close\">\r\n          <IconButton color=\"primary\" aria-label=\"close\" component=\"span\" onClick={close}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Container maxWidth=\"lg\" className=\"comic-info\">\r\n          <Grid container spacing={2} direction=\"column\">\r\n            <Grid item xs={12} className=\"title-modal-mobile\">\r\n              <Typography variant=\"h4\">\r\n                {comic.title} - {comic.id}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container justify=\"space-between\" alignItems=\"flex-start\" spacing={4}>\r\n                <Grid item xs={12} sm={4} md={3} className=\"image-block\">\r\n                  <img src={`${comic.thumbnail.path}.${comic.thumbnail.extension}`} alt={comic.title} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={8} md={9}>\r\n                  <Grid container direction=\"column\" spacing={4}>\r\n                    <Grid item className=\"title-modal-default\">\r\n                      <Typography variant=\"h4\">\r\n                        {comic.title} - {comic.id}\r\n                      </Typography>\r\n                    </Grid>\r\n                    {comic.creators.available > 0 && (\r\n                      <>\r\n                        {comic.creators.items.filter((creator) => creator.role.includes(\"writer\")).length > 0 && (\r\n                          <Grid item>\r\n                            <Typography variant=\"h6\">Writer</Typography>\r\n                            <Typography variant=\"body1\">\r\n                              {comic.creators.items\r\n                                .filter((creator) => creator.role.includes(\"writer\"))\r\n                                .map((creator) => creator.name)\r\n                                .join(\", \")}\r\n                            </Typography>\r\n                          </Grid>\r\n                        )}\r\n                        {comic.creators.items.filter((creator) => creator.role.includes(\"penciller\")).length > 0 && (\r\n                          <Grid item>\r\n                            <Typography variant=\"h6\">Penciler</Typography>\r\n                            <Typography variant=\"body1\">\r\n                              {comic.creators.items\r\n                                .filter((creator) => creator.role.includes(\"penciller\"))\r\n                                .map((creator) => creator.name)\r\n                                .join(\", \")}\r\n                            </Typography>\r\n                          </Grid>\r\n                        )}\r\n                        {comic.creators.items.filter((creator) => creator.role.includes(\"editor\")).length > 0 && (\r\n                          <Grid item>\r\n                            <Typography variant=\"h6\">Editor</Typography>\r\n                            <Typography variant=\"body1\">\r\n                              {comic.creators.items\r\n                                .filter((creator) => creator.role.includes(\"editor\"))\r\n                                .map((creator) => creator.name)\r\n                                .join(\", \")}\r\n                            </Typography>\r\n                          </Grid>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                    {comic.description && (\r\n                      <Grid item>\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          dangerouslySetInnerHTML={{ __html: comic.description }}\r\n                        ></Typography>\r\n                      </Grid>\r\n                    )}\r\n                    {comic.prices.length > 0 && (\r\n                      <Grid item>\r\n                        {comic.prices.map((price) => (\r\n                          <Typography key={price.type} variant=\"body2\">{`${getPriceType(price.type)}: $${\r\n                            price.price\r\n                          }`}</Typography>\r\n                        ))}\r\n                      </Grid>\r\n                    )}\r\n                    {comic.pageCount > 0 && (\r\n                      <Grid item>\r\n                        <Typography variant=\"body2\">Page count: {comic.pageCount}</Typography>\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ComicModel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as comicsActions from \"../../Actions/Comics.Action\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport ComicModel from \"../ComicModel/ComicModel\";\r\nimport \"./CardComics.scss\";\r\n\r\nconst CardComics = ({ index, params, selectedComics, removeSelectedComics, addSelectedComics }) => {\r\n  const { info } = params;\r\n  const [check, setCheck] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCheck(selectedComics.some((item) => item.id === info.id));\r\n  }, [info, selectedComics]);\r\n\r\n  const handleChangeCheck = () => {\r\n    selectedComics.some((item) => item.id === info.id) ? removeSelectedComics([info]) : addSelectedComics([info]);\r\n    setCheck(!check);\r\n  };\r\n\r\n  const handleChangeModel = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} md={3} className=\"card-comic\">\r\n      <Card>\r\n        <CardActionArea>\r\n          <CardMedia image={`${info.thumbnail.path}.${info.thumbnail.extension}`} title={info.title} />\r\n          <CardContent>\r\n            <div className=\"title-content\">\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\" title={info.title}>\r\n                {info.title}\r\n              </Typography>\r\n            </div>\r\n            {info.description && (\r\n              <div className=\"description-content\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" title={info.description}>\r\n                  {info.description}\r\n                </Typography>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <FormControlLabel\r\n            control={<Checkbox checked={check} onChange={handleChangeCheck} color=\"primary\" />}\r\n            label={\r\n              <Typography variant=\"button\" color=\"primary\" data-testid={`check-label-${index}`}>\r\n                Select comic\r\n              </Typography>\r\n            }\r\n          />\r\n          <Button size=\"small\" color=\"primary\" onClick={handleChangeModel} data-testid={`learn-more-${index}`}>\r\n            Learn More\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleChangeModel}\r\n        aria-labelledby=\"comic-model-title\"\r\n        aria-describedby=\"comic-model-description\"\r\n      >\r\n        <>\r\n          <ComicModel comic={info} close={handleChangeModel} />\r\n        </>\r\n      </Modal>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedComics: state.comics.selectedComics,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators(comicsActions, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardComics);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport \"./Filter.scss\";\r\n\r\nconst Filter = ({ params, methods, list, selectedComics }) => {\r\n  const { form } = params;\r\n  const { handleSelectAllComics, handleChangeForm } = methods;\r\n\r\n  const [check, setCheck] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCheck(\r\n      list.length > 0 &&\r\n        list.filter((comic) => selectedComics.find((selectedComic) => selectedComic.id === comic.id)).length ===\r\n          list.length\r\n    );\r\n  }, [list, selectedComics]);\r\n\r\n  return (\r\n    <div className=\"filter\">\r\n      <form>\r\n        <Grid container spacing={2} justify=\"center\">\r\n          <Grid item xs={12} md={4}>\r\n            <TextField\r\n              name=\"title\"\r\n              value={form.title}\r\n              label=\"Title\"\r\n              onChange={handleChangeForm}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              inputProps={{ \"data-testid\": \"title\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={2}>\r\n            <FormControl variant=\"outlined\" fullWidth>\r\n              <InputLabel>Format</InputLabel>\r\n              <Select name=\"format\" value={form.format} onChange={handleChangeForm} label=\"Format\">\r\n                <MenuItem value=\"all\">All formats</MenuItem>\r\n                <MenuItem value=\"comic\">Comic</MenuItem>\r\n                <MenuItem value=\"magazine\">magazine</MenuItem>\r\n                <MenuItem value=\"trade paperback\">trade paperback</MenuItem>\r\n                <MenuItem value=\"hardcover\">hardcover</MenuItem>\r\n                <MenuItem value=\"digest\">digest</MenuItem>\r\n                <MenuItem value=\"graphic novel\">graphic novel</MenuItem>\r\n                <MenuItem value=\"digital comic\">digital comic</MenuItem>\r\n                <MenuItem value=\"infinit comic\">infinit comic</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={2}>\r\n            <FormControl variant=\"outlined\" fullWidth>\r\n              <InputLabel>Type</InputLabel>\r\n              <Select name=\"type\" value={form.type} onChange={handleChangeForm} label=\"Type\">\r\n                <MenuItem value=\"all\">All types</MenuItem>\r\n                <MenuItem value=\"comic\">Comic</MenuItem>\r\n                <MenuItem value=\"collection\">collection</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={2}>\r\n            <FormControl variant=\"outlined\" fullWidth>\r\n              <InputLabel>Order</InputLabel>\r\n              <Select name=\"order\" value={form.order} onChange={handleChangeForm} label=\"Order By\">\r\n                <MenuItem value=\"all\">Pattern</MenuItem>\r\n                <MenuItem value=\"focDate\">&uarr; Final Order Cutoff Date</MenuItem>\r\n                <MenuItem value=\"-focDate\">&darr; Final Order Cutoff Date</MenuItem>\r\n                <MenuItem value=\"onsaleDate\">&uarr; On Sale Date</MenuItem>\r\n                <MenuItem value=\"-onsaleDate\">&darr; onsaleDate</MenuItem>\r\n                <MenuItem value=\"title\">&uarr; Title</MenuItem>\r\n                <MenuItem value=\"-title\">&darr; Title</MenuItem>\r\n                <MenuItem value=\"issueNumber\">&uarr; Issue Number</MenuItem>\r\n                <MenuItem value=\"-issueNumber\">&darr; Issue Number</MenuItem>\r\n                <MenuItem value=\"modified\">&uarr; Modified</MenuItem>\r\n                <MenuItem value=\"-modified\">&darr; Modified</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={12} md={10}>\r\n          <Grid container justify=\"space-between\" alignItems=\"center\" className=\"selected-block\">\r\n            <Grid item xs={12} sm={7} className=\"selected-checkbox\">\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={check}\r\n                    onChange={() => handleSelectAllComics(check ? \"desselectAll\" : \"selectAll\")}\r\n                    name=\"allComics\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Select all comics on this page\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={5} className=\"selected-total\">\r\n              <Typography variant=\"body1\">{`Total comics selected: ${selectedComics.length}`}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  list: state.comics.list,\r\n  selectedComics: state.comics.selectedComics,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Filter);\r\n","import React from \"react\";\r\nimport { Grid, Typography, FormControl, Select, MenuItem } from \"@material-ui/core\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport \"./Pagination.scss\";\r\n\r\nconst Filter = ({ params, methods }) => {\r\n  const { total, page, limit, rangeComics } = params;\r\n  const { handleChangePage, handleChangeLimit } = methods;\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <Grid container justify=\"center\" alignItems=\"center\" spacing={4}>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n            <Grid item>\r\n              <Typography variant=\"body1\">Comics by page: </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl variant=\"outlined\">\r\n                <Select value={limit} onChange={handleChangeLimit}>\r\n                  <MenuItem value={25}>25</MenuItem>\r\n                  <MenuItem value={50}>50</MenuItem>\r\n                  <MenuItem value={100}>100</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={2}>\r\n          <Typography variant=\"body1\" align=\"center\">\r\n            <Typography variant=\"body2\" component=\"b\">\r\n              {rangeComics.first}\r\n            </Typography>\r\n            -\r\n            <Typography variant=\"body2\" component=\"b\">\r\n              {rangeComics.last > total ? total : rangeComics.last}\r\n            </Typography>\r\n            {` of `}\r\n            <Typography variant=\"body2\" component=\"b\">\r\n              {total}\r\n            </Typography>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Pagination color=\"primary\" count={Math.ceil(total / limit)} page={page} onChange={handleChangePage} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","export default __webpack_public_path__ + \"static/media/marvel.0565fff5.svg\";","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport * as comicsActions from \"../../Actions/Comics.Action\";\r\nimport { getListComics } from \"../../FetchActions/Comics.Fetch\";\r\nimport { sendComicsToMail } from \"../../FetchActions/Mail.Fetch\";\r\nimport CardComics from \"../../Components/CardComics/CardComics\";\r\nimport Filter from \"../../Components/Filter/Filter\";\r\nimport Pagination from \"../../Components/Pagination/Pagination\";\r\nimport {\r\n  Fab,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  CircularProgress,\r\n  Snackbar,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport \"./Comics.scss\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\n// Icons\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\n// Images\r\nimport logo from \"../../Images/marvel.svg\";\r\n\r\ndocument.title = \"Marvel Comics\";\r\n\r\nconst Comics = ({\r\n  list,\r\n  selectedComics,\r\n  copyright,\r\n  rangeComics,\r\n  total,\r\n  addSelectedComics,\r\n  clearSelectedComics,\r\n  mail,\r\n}) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingButton, setLoadingButton] = useState(true);\r\n  const [snackbar, setSnackbar] = useState({\r\n    type: \"\",\r\n    message: \"\",\r\n    status: false,\r\n  });\r\n  const [dialogMail, setDialogMail] = useState({ mail: \"\", status: false });\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(25);\r\n  const [form, setForm] = useState({\r\n    title: \"\",\r\n    format: \"all\",\r\n    type: \"all\",\r\n    order: \"all\",\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const getComics = useCallback(\r\n    (newPage) => {\r\n      setLoading(true);\r\n      let currentPage = newPage || 1;\r\n      let options = {\r\n        limit: limit,\r\n        offset: limit * (currentPage - 1),\r\n      };\r\n      if (form.title) options.titleStartsWith = form.title;\r\n      if (form.format !== \"all\") options.format = form.format;\r\n      if (form.type !== \"all\") options.formatType = form.type;\r\n      if (form.order !== \"all\") options.orderBy = form.order;\r\n      dispatch(getListComics({ params: options }, currentPage, limit));\r\n    },\r\n    [form, limit, dispatch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n    getComics(1);\r\n  }, [form, getComics]);\r\n\r\n  useEffect(() => {\r\n    if (mail.status && mail.message) clearSelectedComics();\r\n    else if (mail.message) console.log(mail.message);\r\n    if (mail.message)\r\n      setSnackbar({\r\n        type: mail.status ? \"success\" : \"error\",\r\n        message: mail.status ? \"Success sending the comics\" : \"Error sending the comics\",\r\n        status: true,\r\n      });\r\n    setLoadingButton(false);\r\n  }, [mail, clearSelectedComics]);\r\n\r\n  useEffect(() => {\r\n    if (list.length) setLoading(false);\r\n  }, [list]);\r\n\r\n  const handleChangeForm = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangePage = (event, value) => {\r\n    setPage(value);\r\n    getComics(value);\r\n  };\r\n\r\n  const handleChangeLimit = (event) => {\r\n    setLimit(event.target.value);\r\n    getComics(event.target.value);\r\n  };\r\n\r\n  const handleSelectAllComics = (action) => {\r\n    action === \"selectAll\" ? addSelectedComics(list) : clearSelectedComics(list);\r\n  };\r\n\r\n  const handleClickSendComics = () => {\r\n    if (selectedComics.length) {\r\n      setLoadingButton(true);\r\n      setDialogMail({ ...dialogMail, status: true });\r\n    } else\r\n      setSnackbar({\r\n        type: \"warning\",\r\n        message: \"Select some comic!\",\r\n        status: true,\r\n      });\r\n  };\r\n\r\n  const handleCloseDialogMail = () => {\r\n    setDialogMail({ ...dialogMail, status: false });\r\n  };\r\n\r\n  const handleClickDialogMail = () => {\r\n    dispatch(sendComicsToMail(dialogMail.mail, selectedComics));\r\n    handleCloseDialogMail();\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-comics\">\r\n      <div className=\"logo-block\">\r\n        <Container maxWidth=\"lg\">\r\n          <img src={logo} alt=\"Marvel Comics\" id=\"logo\" />\r\n        </Container>\r\n      </div>\r\n\r\n      <div className=\"filter-block\">\r\n        <Container maxWidth=\"lg\">\r\n          <Filter params={{ form }} methods={{ handleSelectAllComics, handleChangeForm }} list={list} />\r\n        </Container>\r\n      </div>\r\n\r\n      <Container maxWidth=\"lg\" className=\"block-comics-list\">\r\n        {loading ? (\r\n          <div className=\"loading\">\r\n            <CircularProgress />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Grid container spacing={4} justify=\"space-evenly\" alignItems=\"flex-start\">\r\n              {list.map((item, index) => (\r\n                <CardComics key={item.id} index={index} params={{ info: item }} />\r\n              ))}\r\n            </Grid>\r\n            <Fab variant=\"extended\" color=\"primary\" onClick={handleClickSendComics} className=\"fab-send-to-mail\" data-testid=\"fab-to-mail\">\r\n              {loadingButton ? <CircularProgress className=\"loading-button\" /> : <SendIcon />}\r\n              <Typography variant=\"button\">To email</Typography>\r\n            </Fab>\r\n            <Pagination\r\n              params={{ total, page, limit, rangeComics }}\r\n              methods={{ handleChangePage, handleChangeLimit }}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n      <footer>\r\n        <Container maxWidth=\"lg\">\r\n          <Typography variant=\"caption\" align=\"center\" component=\"p\">\r\n            <a href=\"https://www.marvel.com/comics\">{copyright}</a>\r\n          </Typography>\r\n        </Container>\r\n      </footer>\r\n      <Snackbar\r\n        open={snackbar.status}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSnackbar({ ...snackbar, status: false })}\r\n      >\r\n        <Alert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          severity={snackbar.type}\r\n          onClose={() => setSnackbar({ ...snackbar, status: false })}\r\n        >\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Dialog open={dialogMail.status} onClose={handleCloseDialogMail} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Send all comics to email</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Enter your email to receive all marked comics.</DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n            value={dialogMail.mail}\r\n            onChange={(e) => setDialogMail({ ...dialogMail, mail: e.target.value })}\r\n            data-testid=\"email\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleCloseDialogMail();\r\n              setLoadingButton(false);\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClickDialogMail} color=\"primary\" data-testid=\"send-email\">\r\n            Send\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  list: state.comics.list,\r\n  selectedComics: state.comics.selectedComics,\r\n  copyright: state.comics.copyright,\r\n  rangeComics: state.comics.rangeComics,\r\n  total: state.comics.total,\r\n  mail: state.mail,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators(comicsActions, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comics);\r\n","import { batchActions } from \"redux-batched-actions\";\r\nimport MarvelClient from \"../Services/Marvel.Service\";\r\nimport {\r\n  setList,\r\n  setCopyright,\r\n  setRangeComics,\r\n  setTotal,\r\n} from \"../Actions/Comics.Action\";\r\n\r\nexport const getListComics = (params, currentPage, limit) => {\r\n  return (dispatch) =>\r\n    MarvelClient.get(\"comics\", params)\r\n      .then((response) => {\r\n        let result = response.data;\r\n        if (result.code === 200) {\r\n          dispatch(\r\n            batchActions([\r\n              setList(result.data.results),\r\n              setCopyright(result.attributionText),\r\n              setRangeComics(\r\n                limit * currentPage + 1 - limit,\r\n                limit * currentPage\r\n              ),\r\n              setTotal(result.data.total),\r\n            ])\r\n          );\r\n        } else console.log(`Code: ${result.code} - Status: ${result.status}`);\r\n      })\r\n      .catch(console.log);\r\n};\r\n","import * as comicsConstants from \"../Constants/Comics.Constant\";\r\n\r\nconst initalState = {\r\n  list: [],\r\n  copyright: \"\",\r\n  rangeComics: { first: \"?\", last: \"?\" },\r\n  selectedComics: [],\r\n  total: 0,\r\n};\r\n\r\nexport default function comics(state = initalState, action) {\r\n  switch (action.type) {\r\n    case comicsConstants.setList:\r\n      return { ...state, list: action.list };\r\n    case comicsConstants.setCopyright:\r\n      return { ...state, copyright: action.text };\r\n    case comicsConstants.setRangeComics:\r\n      return {\r\n        ...state,\r\n        rangeComics: { first: action.first, last: action.last },\r\n      };\r\n    case comicsConstants.addSelectedComics:\r\n      return {\r\n        ...state,\r\n        selectedComics: [\r\n          ...new Set([...state.selectedComics, ...action.comics]),\r\n        ],\r\n      };\r\n    case comicsConstants.removeSelectedComics:\r\n      return {\r\n        ...state,\r\n        selectedComics: state.selectedComics.filter(\r\n          (selectedComic) =>\r\n            !action.comics.some((comic) => selectedComic.id === comic.id)\r\n        ),\r\n      };\r\n    case comicsConstants.clearSelectedComics:\r\n      return { ...state, selectedComics: [] };\r\n    case comicsConstants.setTotal:\r\n      return { ...state, total: action.total };\r\n    default:\r\n      return state;\r\n  }\r\n}","import * as mailConstants from \"../Constants/Mail.Constant\";\r\n\r\nconst initalState = {\r\n  status: true,\r\n  message: \"\",\r\n};\r\n\r\nexport default function mail(state = initalState, action) {\r\n  switch (action.type) {\r\n    case mailConstants.sendMail:\r\n      return action;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport comics from \"../Reduces/Comics.Reduce\";\r\nimport mail from \"../Reduces/Mail.Reduce\";\r\n\r\nconst reduces = combineReducers({ comics, mail });\r\n\r\nexport default reduces;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { enableBatching } from \"redux-batched-actions\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reduces from \"../Reduces\";\r\n\r\nconst store = createStore(enableBatching(reduces), applyMiddleware(thunk));\r\n\r\nexport { store, reduces };\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport Comics from \"../Pages/Comics/Comics\";\r\nimport \"./App.scss\";\r\n\r\nimport { store } from \"./Store\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#ed1d24\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <MuiThemeProvider theme={theme}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/MarvelComics\" exact={true} component={Comics} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </MuiThemeProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './Containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}